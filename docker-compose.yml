version: "3.8"

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:3001
      - VITE_APP_NAME=Crypto Portfolio Tracker
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - crypto-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API (optional - for development)
  backend:
    image: node:18-alpine
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://user:password@db:5432/crypto_portfolio
      - JWT_SECRET=your-secret-key
    volumes:
      - ../backend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run start:dev
    networks:
      - crypto-network
    restart: unless-stopped
    depends_on:
      - db

  # PostgreSQL Database (optional - for development)
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=crypto_portfolio
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - crypto-network
    restart: unless-stopped

  # Redis Cache (optional - for development)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crypto-network
    restart: unless-stopped

networks:
  crypto-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
